/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(s==nullptr&&t==nullptr) return true;
        if(t==nullptr) return true;
        if(s==nullptr&& t!= nullptr) return false;
        return isSameVal(s,t)||isSubtree(s->left,t) || isSubtree(s->right, t);
    }
    bool isSameVal(TreeNode* s, TreeNode* t){
        if(s!=nullptr&&t!=nullptr){
            return s->val==t->val && isSameVal(s->left,t->left) && isSameVal(s->right,t->right);
        }
        if(s==nullptr&&t==nullptr) return true;
        return false;
        
    }
};